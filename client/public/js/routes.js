(function() {
  var app;

  app = angular.module('moedit.App');

  app.config([
    '$stateProvider', '$urlRouterProvider', '$locationProvider', function($stateProvider, $urlRouterProvider, $locationProvider) {
      $stateProvider.state('login', {
        url: "/login",
        templateUrl: 'partials/login.html',
        controller: 'loginController'
      }).state('logout', {
        url: "/logout"
      }).state('edit', {
        url: "/edit/:docid",
        templateUrl: 'partials/edit.html',
        controller: 'editController'
      }).state('list', {
        url: "/list",
        templateUrl: 'partials/list.html',
        controller: 'listController'
      });
      $urlRouterProvider.otherwise('/list');
      return $locationProvider.html5Mode(true);
    }
  ]);

  app.run([
    '$rootScope', '$state', '$log', 'moedit.Auth', function($rootScope, $state, $log, Auth) {
      return $rootScope.$on("$stateChangeStart", function(event, toState, toParams, fromState, fromParams) {
        $log.info("statechange from: " + fromState.name + " to: " + toState.name);
        return;
        if (toState.name !== 'login') {
          if (!Auth.isLoggedIn()) {
            $log.info("not logged in for that state. goto login.");
            event.preventDefault();
            $state.go('login');
          }
          if (toState.name === 'logout') {
            $log.info("logout and goto login");
            Auth.logout();
            event.preventDefault();
            return $state.go('login');
          }
        }
      });
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFBLEdBQUE7O0FBQUEsRUFBQSxHQUFBLEdBQU0sT0FBTyxDQUFDLE1BQVIsQ0FBZ0IsWUFBaEIsQ0FBTixDQUFBOztBQUFBLEVBR0EsR0FBRyxDQUFDLE1BQUosQ0FBVztJQUFFLGdCQUFGLEVBQW9CLG9CQUFwQixFQUEwQyxtQkFBMUMsRUFBOEQsU0FBQyxjQUFELEVBQWlCLGtCQUFqQixFQUFxQyxpQkFBckMsR0FBQTtBQUV4RSxNQUFBLGNBQ0MsQ0FBQyxLQURGLENBQ1MsT0FEVCxFQUVFO0FBQUEsUUFBQSxHQUFBLEVBQU0sUUFBTjtBQUFBLFFBQ0EsV0FBQSxFQUFjLHFCQURkO0FBQUEsUUFFQSxVQUFBLEVBQWEsaUJBRmI7T0FGRixDQU1DLENBQUMsS0FORixDQU1TLFFBTlQsRUFPRTtBQUFBLFFBQUEsR0FBQSxFQUFNLFNBQU47T0FQRixDQVNDLENBQUMsS0FURixDQVNTLE1BVFQsRUFVRTtBQUFBLFFBQUEsR0FBQSxFQUFNLGNBQU47QUFBQSxRQUNBLFdBQUEsRUFBYyxvQkFEZDtBQUFBLFFBRUEsVUFBQSxFQUFhLGdCQUZiO09BVkYsQ0FjQyxDQUFDLEtBZEYsQ0FjUyxNQWRULEVBZUU7QUFBQSxRQUFBLEdBQUEsRUFBTSxPQUFOO0FBQUEsUUFDQSxXQUFBLEVBQWMsb0JBRGQ7QUFBQSxRQUVBLFVBQUEsRUFBYSxnQkFGYjtPQWZGLENBQUEsQ0FBQTtBQUFBLE1Bb0JBLGtCQUFrQixDQUFDLFNBQW5CLENBQThCLE9BQTlCLENBcEJBLENBQUE7YUFzQkEsaUJBQWlCLENBQUMsU0FBbEIsQ0FBNEIsSUFBNUIsRUF4QndFO0lBQUEsQ0FBOUQ7R0FBWCxDQUhBLENBQUE7O0FBQUEsRUErQkEsR0FBRyxDQUFDLEdBQUosQ0FBUTtJQUFFLFlBQUYsRUFBZ0IsUUFBaEIsRUFBMEIsTUFBMUIsRUFBa0MsYUFBbEMsRUFBZ0QsU0FBQyxVQUFELEVBQWEsTUFBYixFQUFxQixJQUFyQixFQUEyQixJQUEzQixHQUFBO2FBQ3ZELFVBQVUsQ0FBQyxHQUFYLENBQWdCLG1CQUFoQixFQUFvQyxTQUFDLEtBQUQsRUFBUSxPQUFSLEVBQWlCLFFBQWpCLEVBQTJCLFNBQTNCLEVBQXNDLFVBQXRDLEdBQUE7QUFDbkMsUUFBQSxJQUFJLENBQUMsSUFBTCxDQUFXLG9CQUFBLEdBQW9CLFNBQVMsQ0FBQyxJQUE5QixHQUFtQyxPQUFuQyxHQUEwQyxPQUFPLENBQUMsSUFBN0QsQ0FBQSxDQUFBO0FBQ0EsY0FBQSxDQURBO0FBRUEsUUFBQSxJQUFHLE9BQU8sQ0FBQyxJQUFSLEtBQWlCLE9BQXBCO0FBQ0MsVUFBQSxJQUFHLENBQUEsSUFBSyxDQUFDLFVBQUwsQ0FBQSxDQUFKO0FBQ0MsWUFBQSxJQUFJLENBQUMsSUFBTCxDQUFXLDJDQUFYLENBQUEsQ0FBQTtBQUFBLFlBQ0EsS0FBSyxDQUFDLGNBQU4sQ0FBQSxDQURBLENBQUE7QUFBQSxZQUVBLE1BQU0sQ0FBQyxFQUFQLENBQVcsT0FBWCxDQUZBLENBREQ7V0FBQTtBQUtBLFVBQUEsSUFBRyxPQUFPLENBQUMsSUFBUixLQUFpQixRQUFwQjtBQUNDLFlBQUEsSUFBSSxDQUFDLElBQUwsQ0FBVyx1QkFBWCxDQUFBLENBQUE7QUFBQSxZQUNBLElBQUksQ0FBQyxNQUFMLENBQUEsQ0FEQSxDQUFBO0FBQUEsWUFFQSxLQUFLLENBQUMsY0FBTixDQUFBLENBRkEsQ0FBQTttQkFHQSxNQUFNLENBQUMsRUFBUCxDQUFXLE9BQVgsRUFKRDtXQU5EO1NBSG1DO01BQUEsQ0FBcEMsRUFEdUQ7SUFBQSxDQUFoRDtHQUFSLENBL0JBLENBQUE7QUFBQSIsImZpbGUiOiJyb3V0ZXMuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJhcHAgPSBhbmd1bGFyLm1vZHVsZSgnbW9lZGl0LkFwcCcpXHJcblxyXG4jIHJvdXRlc1xyXG5hcHAuY29uZmlnIFsnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywgJyRsb2NhdGlvblByb3ZpZGVyJywgKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSAtPlxyXG5cclxuXHQkc3RhdGVQcm92aWRlclxyXG5cdFx0LnN0YXRlICdsb2dpbicsXHJcblx0XHRcdHVybDogXCIvbG9naW5cIlxyXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2xvZ2luLmh0bWwnXHJcblx0XHRcdGNvbnRyb2xsZXI6ICdsb2dpbkNvbnRyb2xsZXInXHJcblx0XHRcclxuXHRcdC5zdGF0ZSAnbG9nb3V0JyxcclxuXHRcdFx0dXJsOiBcIi9sb2dvdXRcIlxyXG5cclxuXHRcdC5zdGF0ZSAnZWRpdCcsXHJcblx0XHRcdHVybDogXCIvZWRpdC86ZG9jaWRcIlxyXG5cdFx0XHR0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2VkaXQuaHRtbCdcclxuXHRcdFx0Y29udHJvbGxlcjogJ2VkaXRDb250cm9sbGVyJ1xyXG5cclxuXHRcdC5zdGF0ZSAnbGlzdCcsXHJcblx0XHRcdHVybDogXCIvbGlzdFwiXHJcblx0XHRcdHRlbXBsYXRlVXJsOiAncGFydGlhbHMvbGlzdC5odG1sJ1xyXG5cdFx0XHRjb250cm9sbGVyOiAnbGlzdENvbnRyb2xsZXInXHJcblxyXG5cclxuXHQkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvbGlzdCcpO1xyXG5cclxuXHQkbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUodHJ1ZSlcclxuXVxyXG5cclxuIyB0YWtlIG5vdCBsb2dnZWQgaW4gdXNlciB0byBsb2dpblxyXG5hcHAucnVuIFsnJHJvb3RTY29wZScsICckc3RhdGUnLCAnJGxvZycsICdtb2VkaXQuQXV0aCcsICgkcm9vdFNjb3BlLCAkc3RhdGUsICRsb2csIEF1dGgpIC0+XHJcblx0JHJvb3RTY29wZS4kb24gXCIkc3RhdGVDaGFuZ2VTdGFydFwiLCAoZXZlbnQsIHRvU3RhdGUsIHRvUGFyYW1zLCBmcm9tU3RhdGUsIGZyb21QYXJhbXMpIC0+XHJcblx0XHQkbG9nLmluZm8gXCJzdGF0ZWNoYW5nZSBmcm9tOiAje2Zyb21TdGF0ZS5uYW1lfSB0bzogI3t0b1N0YXRlLm5hbWV9XCJcclxuXHRcdHJldHVyblxyXG5cdFx0aWYgdG9TdGF0ZS5uYW1lICE9ICdsb2dpbidcclxuXHRcdFx0aWYgIUF1dGguaXNMb2dnZWRJbigpXHJcblx0XHRcdFx0JGxvZy5pbmZvIFwibm90IGxvZ2dlZCBpbiBmb3IgdGhhdCBzdGF0ZS4gZ290byBsb2dpbi5cIlxyXG5cdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxuXHRcdFx0XHQkc3RhdGUuZ28gJ2xvZ2luJ1xyXG5cclxuXHRcdFx0aWYgdG9TdGF0ZS5uYW1lID09ICdsb2dvdXQnXHJcblx0XHRcdFx0JGxvZy5pbmZvIFwibG9nb3V0IGFuZCBnb3RvIGxvZ2luXCJcclxuXHRcdFx0XHRBdXRoLmxvZ291dCgpXHJcblx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG5cdFx0XHRcdCRzdGF0ZS5nbyAnbG9naW4nXHJcbl0iXX0=