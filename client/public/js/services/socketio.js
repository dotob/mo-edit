(function() {
  angular.module('moedit.Services').factory('moedit.Socket', [
    '$rootScope', '$log', function($rootScope, $log) {
      var socket;
      socket = io.connect();
      return {
        on: function(eventName, callback) {
          return socket.on(eventName, function() {
            var args;
            args = arguments;
            return $rootScope.$apply(function() {
              return callback.apply(socket, args);
            });
          });
        },
        emit: function(eventName, data, callback) {
          if (typeof data === 'function') {
            callback = data;
            data = {};
          }
          return socket.emit(eventName, data, function() {
            var args;
            args = arguments;
            return $rootScope.$apply(function() {
              if (callback) {
                return callback.apply(socket, args);
              }
            });
          });
        },
        emitAndListen: function(eventName, data, callback) {
          this.emit(eventName, data, callback);
          return this.on(eventName, callback);
        }
      };
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL3NvY2tldGlvLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLEVBQUEsT0FBTyxDQUFDLE1BQVIsQ0FBZSxpQkFBZixDQUFpQyxDQUFDLE9BQWxDLENBQTBDLGVBQTFDLEVBQTJEO0lBQUMsWUFBRCxFQUFlLE1BQWYsRUFBdUIsU0FBQyxVQUFELEVBQWEsSUFBYixHQUFBO0FBQ2hGLFVBQUEsTUFBQTtBQUFBLE1BQUEsTUFBQSxHQUFTLEVBQUUsQ0FBQyxPQUFILENBQUEsQ0FBVCxDQUFBO2FBRUE7QUFBQSxRQUFBLEVBQUEsRUFBSSxTQUFDLFNBQUQsRUFBWSxRQUFaLEdBQUE7aUJBQ0gsTUFBTSxDQUFDLEVBQVAsQ0FBVSxTQUFWLEVBQXFCLFNBQUEsR0FBQTtBQUNwQixnQkFBQSxJQUFBO0FBQUEsWUFBQSxJQUFBLEdBQU8sU0FBUCxDQUFBO21CQUNBLFVBQVUsQ0FBQyxNQUFYLENBQWtCLFNBQUEsR0FBQTtxQkFDakIsUUFBUSxDQUFDLEtBQVQsQ0FBZSxNQUFmLEVBQXVCLElBQXZCLEVBRGlCO1lBQUEsQ0FBbEIsRUFGb0I7VUFBQSxDQUFyQixFQURHO1FBQUEsQ0FBSjtBQUFBLFFBS0EsSUFBQSxFQUFNLFNBQUMsU0FBRCxFQUFZLElBQVosRUFBa0IsUUFBbEIsR0FBQTtBQUNMLFVBQUEsSUFBRyxNQUFBLENBQUEsSUFBQSxLQUFlLFVBQWxCO0FBQ0MsWUFBQSxRQUFBLEdBQVcsSUFBWCxDQUFBO0FBQUEsWUFDQSxJQUFBLEdBQU8sRUFEUCxDQUREO1dBQUE7aUJBR0EsTUFBTSxDQUFDLElBQVAsQ0FBWSxTQUFaLEVBQXVCLElBQXZCLEVBQTZCLFNBQUEsR0FBQTtBQUM1QixnQkFBQSxJQUFBO0FBQUEsWUFBQSxJQUFBLEdBQU8sU0FBUCxDQUFBO21CQUNBLFVBQVUsQ0FBQyxNQUFYLENBQWtCLFNBQUEsR0FBQTtBQUNqQixjQUFBLElBQUcsUUFBSDt1QkFDQyxRQUFRLENBQUMsS0FBVCxDQUFlLE1BQWYsRUFBdUIsSUFBdkIsRUFERDtlQURpQjtZQUFBLENBQWxCLEVBRjRCO1VBQUEsQ0FBN0IsRUFKSztRQUFBLENBTE47QUFBQSxRQWNBLGFBQUEsRUFBZSxTQUFDLFNBQUQsRUFBWSxJQUFaLEVBQWtCLFFBQWxCLEdBQUE7QUFDZCxVQUFBLElBQUMsQ0FBQyxJQUFGLENBQU8sU0FBUCxFQUFrQixJQUFsQixFQUF3QixRQUF4QixDQUFBLENBQUE7aUJBQ0EsSUFBQyxDQUFDLEVBQUYsQ0FBSyxTQUFMLEVBQWdCLFFBQWhCLEVBRmM7UUFBQSxDQWRmO1FBSGdGO0lBQUEsQ0FBdkI7R0FBM0QsQ0FBQSxDQUFBO0FBQUEiLCJmaWxlIjoic2VydmljZXMvc29ja2V0aW8uanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnbW9lZGl0LlNlcnZpY2VzJykuZmFjdG9yeSAnbW9lZGl0LlNvY2tldCcsIFsnJHJvb3RTY29wZScsICckbG9nJywgKCRyb290U2NvcGUsICRsb2cpIC0+XG5cdFx0c29ja2V0ID0gaW8uY29ubmVjdCgpXG5cblx0XHRvbjogKGV2ZW50TmFtZSwgY2FsbGJhY2spIC0+XG5cdFx0XHRzb2NrZXQub24gZXZlbnROYW1lLCAoKSAtPlxuXHRcdFx0XHRhcmdzID0gYXJndW1lbnRzXG5cdFx0XHRcdCRyb290U2NvcGUuJGFwcGx5ICgpIC0+XG5cdFx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoc29ja2V0LCBhcmdzKVxuXHRcdGVtaXQ6IChldmVudE5hbWUsIGRhdGEsIGNhbGxiYWNrKSAtPlxuXHRcdFx0aWYgdHlwZW9mIGRhdGEgPT0gJ2Z1bmN0aW9uJ1xuXHRcdFx0XHRjYWxsYmFjayA9IGRhdGFcblx0XHRcdFx0ZGF0YSA9IHt9XG5cdFx0XHRzb2NrZXQuZW1pdCBldmVudE5hbWUsIGRhdGEsICgpIC0+XG5cdFx0XHRcdGFyZ3MgPSBhcmd1bWVudHNcblx0XHRcdFx0JHJvb3RTY29wZS4kYXBwbHkgKCkgLT5cblx0XHRcdFx0XHRpZiBjYWxsYmFja1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoc29ja2V0LCBhcmdzKVxuXHRcdGVtaXRBbmRMaXN0ZW46IChldmVudE5hbWUsIGRhdGEsIGNhbGxiYWNrKSAtPlxuXHRcdFx0QC5lbWl0KGV2ZW50TmFtZSwgZGF0YSwgY2FsbGJhY2spXG5cdFx0XHRALm9uKGV2ZW50TmFtZSwgY2FsbGJhY2spXG5cdF0iXX0=