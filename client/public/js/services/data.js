(function() {
  angular.module('moedit.App').config([
    'RestangularProvider', function(RestangularProvider) {
      RestangularProvider.setBaseUrl('/api');
      RestangularProvider.setRestangularFields({
        id: "_id"
      });
      return RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {
        var extractedData;
        extractedData = void 0;
        if (operation === 'getList') {
          extractedData = data.payload;
        } else {
          extractedData = data.payload;
        }
        return extractedData;
      });
    }
  ]);

  angular.module('moedit.Services').factory('moedit.Data', [
    '$rootScope', '$log', 'Restangular', function($rootScope, $log, Restangular) {
      var baseDocuments, self;
      baseDocuments = Restangular.all('document');
      self = {
        documents: function() {
          return baseDocuments.getList();
        },
        authors: function() {}
      };
      return self;
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2RhdGEuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsRUFBQSxPQUFPLENBQUMsTUFBUixDQUFnQixZQUFoQixDQUE0QixDQUFDLE1BQTdCLENBQW9DO0lBQUUscUJBQUYsRUFBd0IsU0FBQyxtQkFBRCxHQUFBO0FBQzNELE1BQUEsbUJBQW1CLENBQUMsVUFBcEIsQ0FBZ0MsTUFBaEMsQ0FBQSxDQUFBO0FBQUEsTUFDQSxtQkFBbUIsQ0FBQyxvQkFBcEIsQ0FBeUM7QUFBQSxRQUFFLEVBQUEsRUFBSyxLQUFQO09BQXpDLENBREEsQ0FBQTthQUdBLG1CQUFtQixDQUFDLHNCQUFwQixDQUEyQyxTQUFDLElBQUQsRUFBTyxTQUFQLEVBQWtCLElBQWxCLEVBQXdCLEdBQXhCLEVBQTZCLFFBQTdCLEVBQXVDLFFBQXZDLEdBQUE7QUFDMUMsWUFBQSxhQUFBO0FBQUEsUUFBQSxhQUFBLEdBQWdCLE1BQWhCLENBQUE7QUFFQSxRQUFBLElBQUcsU0FBQSxLQUFjLFNBQWpCO0FBQ0MsVUFBQSxhQUFBLEdBQWdCLElBQUksQ0FBQyxPQUFyQixDQUREO1NBQUEsTUFBQTtBQUdDLFVBQUEsYUFBQSxHQUFnQixJQUFJLENBQUMsT0FBckIsQ0FIRDtTQUZBO2VBTUEsY0FQMEM7TUFBQSxDQUEzQyxFQUoyRDtJQUFBLENBQXhCO0dBQXBDLENBQUEsQ0FBQTs7QUFBQSxFQWNBLE9BQU8sQ0FBQyxNQUFSLENBQWdCLGlCQUFoQixDQUFpQyxDQUFDLE9BQWxDLENBQTJDLGFBQTNDLEVBQXlEO0lBQ3ZELFlBRHVELEVBRXZELE1BRnVELEVBR3ZELGFBSHVELEVBSXhELFNBQUMsVUFBRCxFQUFhLElBQWIsRUFBbUIsV0FBbkIsR0FBQTtBQUVDLFVBQUEsbUJBQUE7QUFBQSxNQUFBLGFBQUEsR0FBZ0IsV0FBVyxDQUFDLEdBQVosQ0FBaUIsVUFBakIsQ0FBaEIsQ0FBQTtBQUFBLE1BRUEsSUFBQSxHQUNDO0FBQUEsUUFBQSxTQUFBLEVBQVcsU0FBQSxHQUFBO2lCQUNWLGFBQWEsQ0FBQyxPQUFkLENBQUEsRUFEVTtRQUFBLENBQVg7QUFBQSxRQUlBLE9BQUEsRUFBUyxTQUFBLEdBQUEsQ0FKVDtPQUhELENBQUE7YUFVQSxLQVpEO0lBQUEsQ0FKd0Q7R0FBekQsQ0FkQSxDQUFBO0FBQUEiLCJmaWxlIjoic2VydmljZXMvZGF0YS5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdtb2VkaXQuQXBwJykuY29uZmlnIFsnUmVzdGFuZ3VsYXJQcm92aWRlcicsIChSZXN0YW5ndWxhclByb3ZpZGVyKSAtPlxyXG5cdFJlc3Rhbmd1bGFyUHJvdmlkZXIuc2V0QmFzZVVybCAnL2FwaSdcclxuXHRSZXN0YW5ndWxhclByb3ZpZGVyLnNldFJlc3Rhbmd1bGFyRmllbGRzIHsgaWQ6IFwiX2lkXCJ9XHJcblx0IyBhZGQgYSByZXNwb25zZSBpbnRlcmVjZXB0b3JcclxuXHRSZXN0YW5ndWxhclByb3ZpZGVyLmFkZFJlc3BvbnNlSW50ZXJjZXB0b3IgKGRhdGEsIG9wZXJhdGlvbiwgd2hhdCwgdXJsLCByZXNwb25zZSwgZGVmZXJyZWQpIC0+XHJcblx0XHRleHRyYWN0ZWREYXRhID0gdW5kZWZpbmVkXHJcblx0XHQjIC4uIHRvIGxvb2sgZm9yIGdldExpc3Qgb3BlcmF0aW9uc1xyXG5cdFx0aWYgb3BlcmF0aW9uID09ICdnZXRMaXN0J1xyXG5cdFx0XHRleHRyYWN0ZWREYXRhID0gZGF0YS5wYXlsb2FkXHJcblx0XHRlbHNlXHJcblx0XHRcdGV4dHJhY3RlZERhdGEgPSBkYXRhLnBheWxvYWRcclxuXHRcdGV4dHJhY3RlZERhdGFcclxuXVxyXG5cclxuYW5ndWxhci5tb2R1bGUoJ21vZWRpdC5TZXJ2aWNlcycpLmZhY3RvcnkgJ21vZWRpdC5EYXRhJywgWyBcclxuXHQnJHJvb3RTY29wZSdcclxuXHQnJGxvZydcclxuXHQnUmVzdGFuZ3VsYXInXHJcblx0KCRyb290U2NvcGUsICRsb2csIFJlc3Rhbmd1bGFyKSAtPlxyXG5cclxuXHRcdGJhc2VEb2N1bWVudHMgPSBSZXN0YW5ndWxhci5hbGwoJ2RvY3VtZW50JylcclxuXHJcblx0XHRzZWxmID1cclxuXHRcdFx0ZG9jdW1lbnRzOiAtPlxyXG5cdFx0XHRcdGJhc2VEb2N1bWVudHMuZ2V0TGlzdCgpXHJcblx0XHRcdFx0XHJcblxyXG5cdFx0XHRhdXRob3JzOiAtPlxyXG5cclxuXHJcblx0XHRzZWxmXHJcbl0iXX0=