(function() {
  angular.module('moedit.App').config([
    'RestangularProvider', function(RestangularProvider) {
      RestangularProvider.setBaseUrl('/api');
      RestangularProvider.setRestangularFields({
        id: "_id"
      });
      return RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {
        var extractedData;
        extractedData = void 0;
        if (operation === 'getList') {
          extractedData = data.payload;
        } else {
          extractedData = data.payload;
        }
        return extractedData;
      });
    }
  ]);

  angular.module('moedit.Services').factory('moedit.Data', [
    '$rootScope', '$log', 'Restangular', function($rootScope, $log, Restangular) {
      var baseDocuments, self;
      baseDocuments = Restangular.all('document');
      self = {
        documents: function() {
          return baseDocuments.getList();
        },
        authors: function() {}
      };
      return self;
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2RhdGEuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsRUFBQSxPQUFPLENBQUMsTUFBUixDQUFnQixZQUFoQixDQUE0QixDQUFDLE1BQTdCLENBQW9DO0lBQUUscUJBQUYsRUFBd0IsU0FBQyxtQkFBRCxHQUFBO0FBQzNELE1BQUEsbUJBQW1CLENBQUMsVUFBcEIsQ0FBZ0MsTUFBaEMsQ0FBQSxDQUFBO0FBQUEsTUFDQSxtQkFBbUIsQ0FBQyxvQkFBcEIsQ0FBeUM7QUFBQSxRQUFFLEVBQUEsRUFBSyxLQUFQO09BQXpDLENBREEsQ0FBQTthQUdBLG1CQUFtQixDQUFDLHNCQUFwQixDQUEyQyxTQUFDLElBQUQsRUFBTyxTQUFQLEVBQWtCLElBQWxCLEVBQXdCLEdBQXhCLEVBQTZCLFFBQTdCLEVBQXVDLFFBQXZDLEdBQUE7QUFDMUMsWUFBQSxhQUFBO0FBQUEsUUFBQSxhQUFBLEdBQWdCLE1BQWhCLENBQUE7QUFFQSxRQUFBLElBQUcsU0FBQSxLQUFjLFNBQWpCO0FBQ0MsVUFBQSxhQUFBLEdBQWdCLElBQUksQ0FBQyxPQUFyQixDQUREO1NBQUEsTUFBQTtBQUdDLFVBQUEsYUFBQSxHQUFnQixJQUFJLENBQUMsT0FBckIsQ0FIRDtTQUZBO2VBTUEsY0FQMEM7TUFBQSxDQUEzQyxFQUoyRDtJQUFBLENBQXhCO0dBQXBDLENBQUEsQ0FBQTs7QUFBQSxFQWNBLE9BQU8sQ0FBQyxNQUFSLENBQWdCLGlCQUFoQixDQUFpQyxDQUFDLE9BQWxDLENBQTJDLGFBQTNDLEVBQXlEO0lBQ3ZELFlBRHVELEVBRXZELE1BRnVELEVBR3ZELGFBSHVELEVBSXhELFNBQUMsVUFBRCxFQUFhLElBQWIsRUFBbUIsV0FBbkIsR0FBQTtBQUVDLFVBQUEsbUJBQUE7QUFBQSxNQUFBLGFBQUEsR0FBZ0IsV0FBVyxDQUFDLEdBQVosQ0FBaUIsVUFBakIsQ0FBaEIsQ0FBQTtBQUFBLE1BRUEsSUFBQSxHQUNDO0FBQUEsUUFBQSxTQUFBLEVBQVcsU0FBQSxHQUFBO2lCQUNWLGFBQWEsQ0FBQyxPQUFkLENBQUEsRUFEVTtRQUFBLENBQVg7QUFBQSxRQUlBLE9BQUEsRUFBUyxTQUFBLEdBQUEsQ0FKVDtPQUhELENBQUE7YUFVQSxLQVpEO0lBQUEsQ0FKd0Q7R0FBekQsQ0FkQSxDQUFBO0FBQUEiLCJmaWxlIjoic2VydmljZXMvZGF0YS5qcyIsInNvdXJjZVJvb3QiOiIvc291cmNlLyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdtb2VkaXQuQXBwJykuY29uZmlnIFsnUmVzdGFuZ3VsYXJQcm92aWRlcicsIChSZXN0YW5ndWxhclByb3ZpZGVyKSAtPlxuXHRSZXN0YW5ndWxhclByb3ZpZGVyLnNldEJhc2VVcmwgJy9hcGknXG5cdFJlc3Rhbmd1bGFyUHJvdmlkZXIuc2V0UmVzdGFuZ3VsYXJGaWVsZHMgeyBpZDogXCJfaWRcIn1cblx0IyBhZGQgYSByZXNwb25zZSBpbnRlcmVjZXB0b3Jcblx0UmVzdGFuZ3VsYXJQcm92aWRlci5hZGRSZXNwb25zZUludGVyY2VwdG9yIChkYXRhLCBvcGVyYXRpb24sIHdoYXQsIHVybCwgcmVzcG9uc2UsIGRlZmVycmVkKSAtPlxuXHRcdGV4dHJhY3RlZERhdGEgPSB1bmRlZmluZWRcblx0XHQjIC4uIHRvIGxvb2sgZm9yIGdldExpc3Qgb3BlcmF0aW9uc1xuXHRcdGlmIG9wZXJhdGlvbiA9PSAnZ2V0TGlzdCdcblx0XHRcdGV4dHJhY3RlZERhdGEgPSBkYXRhLnBheWxvYWRcblx0XHRlbHNlXG5cdFx0XHRleHRyYWN0ZWREYXRhID0gZGF0YS5wYXlsb2FkXG5cdFx0ZXh0cmFjdGVkRGF0YVxuXVxuXG5hbmd1bGFyLm1vZHVsZSgnbW9lZGl0LlNlcnZpY2VzJykuZmFjdG9yeSAnbW9lZGl0LkRhdGEnLCBbIFxuXHQnJHJvb3RTY29wZSdcblx0JyRsb2cnXG5cdCdSZXN0YW5ndWxhcidcblx0KCRyb290U2NvcGUsICRsb2csIFJlc3Rhbmd1bGFyKSAtPlxuXG5cdFx0YmFzZURvY3VtZW50cyA9IFJlc3Rhbmd1bGFyLmFsbCgnZG9jdW1lbnQnKVxuXG5cdFx0c2VsZiA9XG5cdFx0XHRkb2N1bWVudHM6IC0+XG5cdFx0XHRcdGJhc2VEb2N1bWVudHMuZ2V0TGlzdCgpXG5cdFx0XHRcdFxuXG5cdFx0XHRhdXRob3JzOiAtPlxuXG5cblx0XHRzZWxmXG5dIl19