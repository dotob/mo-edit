(function() {
  angular.module('moedit.Services').factory('moedit.Data', [
    '$rootScope', '$log', '$http', '$q', function($rootScope, $log, $http, $q) {
      var self;
      self = {
        documents: function() {
          var deferred;
          deferred = $q.defer();
          $http.get('/documents').then(function(response) {
            return deferred.resolve(response.data);
          });
          return deferred.promise;
        },
        document: function(docid) {
          var deferred;
          deferred = $q.defer();
          $http.get("/documents/" + docid).then(function(response) {
            return deferred.resolve(response.data);
          });
          return deferred.promise;
        },
        saveDocument: function(doc) {
          return $http.put("/documents/" + doc._id, doc);
        },
        deleteDocument: function(doc) {
          return $http["delete"]("/documents/" + doc._id);
        },
        authors: function() {}
      };
      return self;
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2RhdGEuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsRUFBQSxPQUFPLENBQUMsTUFBUixDQUFnQixpQkFBaEIsQ0FBaUMsQ0FBQyxPQUFsQyxDQUEyQyxhQUEzQyxFQUF5RDtJQUN2RCxZQUR1RCxFQUV2RCxNQUZ1RCxFQUd2RCxPQUh1RCxFQUl2RCxJQUp1RCxFQUt4RCxTQUFDLFVBQUQsRUFBYSxJQUFiLEVBQW1CLEtBQW5CLEVBQTBCLEVBQTFCLEdBQUE7QUFFQyxVQUFBLElBQUE7QUFBQSxNQUFBLElBQUEsR0FDQztBQUFBLFFBQUEsU0FBQSxFQUFXLFNBQUEsR0FBQTtBQUNWLGNBQUEsUUFBQTtBQUFBLFVBQUEsUUFBQSxHQUFXLEVBQUUsQ0FBQyxLQUFILENBQUEsQ0FBWCxDQUFBO0FBQUEsVUFDQSxLQUFLLENBQUMsR0FBTixDQUFXLFlBQVgsQ0FBdUIsQ0FBQyxJQUF4QixDQUE2QixTQUFDLFFBQUQsR0FBQTttQkFDNUIsUUFBUSxDQUFDLE9BQVQsQ0FBaUIsUUFBUSxDQUFDLElBQTFCLEVBRDRCO1VBQUEsQ0FBN0IsQ0FEQSxDQUFBO2lCQUdBLFFBQVEsQ0FBQyxRQUpDO1FBQUEsQ0FBWDtBQUFBLFFBTUEsUUFBQSxFQUFVLFNBQUMsS0FBRCxHQUFBO0FBQ1QsY0FBQSxRQUFBO0FBQUEsVUFBQSxRQUFBLEdBQVcsRUFBRSxDQUFDLEtBQUgsQ0FBQSxDQUFYLENBQUE7QUFBQSxVQUNBLEtBQUssQ0FBQyxHQUFOLENBQVcsYUFBQSxHQUFhLEtBQXhCLENBQWdDLENBQUMsSUFBakMsQ0FBc0MsU0FBQyxRQUFELEdBQUE7bUJBQ3JDLFFBQVEsQ0FBQyxPQUFULENBQWlCLFFBQVEsQ0FBQyxJQUExQixFQURxQztVQUFBLENBQXRDLENBREEsQ0FBQTtpQkFHQSxRQUFRLENBQUMsUUFKQTtRQUFBLENBTlY7QUFBQSxRQVlBLFlBQUEsRUFBYyxTQUFDLEdBQUQsR0FBQTtpQkFDYixLQUFLLENBQUMsR0FBTixDQUFXLGFBQUEsR0FBYSxHQUFHLENBQUMsR0FBNUIsRUFBbUMsR0FBbkMsRUFEYTtRQUFBLENBWmQ7QUFBQSxRQWVBLGNBQUEsRUFBZ0IsU0FBQyxHQUFELEdBQUE7aUJBQ2YsS0FBSyxDQUFDLFFBQUQsQ0FBTCxDQUFjLGFBQUEsR0FBYSxHQUFHLENBQUMsR0FBL0IsRUFEZTtRQUFBLENBZmhCO0FBQUEsUUFrQkEsT0FBQSxFQUFTLFNBQUEsR0FBQSxDQWxCVDtPQURELENBQUE7YUFzQkEsS0F4QkQ7SUFBQSxDQUx3RDtHQUF6RCxDQUFBLENBQUE7QUFBQSIsImZpbGUiOiJzZXJ2aWNlcy9kYXRhLmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ21vZWRpdC5TZXJ2aWNlcycpLmZhY3RvcnkgJ21vZWRpdC5EYXRhJywgWyBcclxuXHQnJHJvb3RTY29wZSdcclxuXHQnJGxvZydcclxuXHQnJGh0dHAnXHJcblx0JyRxJ1xyXG5cdCgkcm9vdFNjb3BlLCAkbG9nLCAkaHR0cCwgJHEpIC0+XHJcblxyXG5cdFx0c2VsZiA9XHJcblx0XHRcdGRvY3VtZW50czogLT5cclxuXHRcdFx0XHRkZWZlcnJlZCA9ICRxLmRlZmVyKClcclxuXHRcdFx0XHQkaHR0cC5nZXQoJy9kb2N1bWVudHMnKS50aGVuIChyZXNwb25zZSkgLT5cclxuXHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmUgcmVzcG9uc2UuZGF0YVxyXG5cdFx0XHRcdGRlZmVycmVkLnByb21pc2VcclxuXHRcdFx0XHJcblx0XHRcdGRvY3VtZW50OiAoZG9jaWQpIC0+XHJcblx0XHRcdFx0ZGVmZXJyZWQgPSAkcS5kZWZlcigpXHJcblx0XHRcdFx0JGh0dHAuZ2V0KFwiL2RvY3VtZW50cy8je2RvY2lkfVwiKS50aGVuIChyZXNwb25zZSkgLT5cclxuXHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmUgcmVzcG9uc2UuZGF0YVxyXG5cdFx0XHRcdGRlZmVycmVkLnByb21pc2VcclxuXHRcdFx0XHJcblx0XHRcdHNhdmVEb2N1bWVudDogKGRvYykgLT5cclxuXHRcdFx0XHQkaHR0cC5wdXQgXCIvZG9jdW1lbnRzLyN7ZG9jLl9pZH1cIiwgZG9jXHJcblxyXG5cdFx0XHRkZWxldGVEb2N1bWVudDogKGRvYykgLT5cclxuXHRcdFx0XHQkaHR0cC5kZWxldGUgXCIvZG9jdW1lbnRzLyN7ZG9jLl9pZH1cIlxyXG5cclxuXHRcdFx0YXV0aG9yczogLT5cclxuXHJcblxyXG5cdFx0c2VsZlxyXG5dIl19