(function() {
  angular.module('moedit.App').config([
    'RestangularProvider', function(RestangularProvider) {
      RestangularProvider.setBaseUrl('/api');
      RestangularProvider.setRestangularFields({
        id: "_id"
      });
      return RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response, deferred) {
        var extractedData;
        extractedData = void 0;
        if (operation === 'getList') {
          extractedData = data.payload;
        } else {
          extractedData = data.payload;
        }
        return extractedData;
      });
    }
  ]);

  angular.module('moedit.Services').factory('moedit.Data', [
    '$rootScope', '$log', 'Restangular', function($rootScope, $log, Restangular) {
      var baseDocuments, self;
      baseDocuments = Restangular.all('document');
      self = {
        documents: function() {
          return baseDocuments.getList();
        },
        saveDocument: function(document) {
          document.put();
          return console.log("put document");
        },
        authors: function() {}
      };
      return self;
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2RhdGEuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsRUFBQSxPQUFPLENBQUMsTUFBUixDQUFnQixZQUFoQixDQUE0QixDQUFDLE1BQTdCLENBQW9DO0lBQUUscUJBQUYsRUFBd0IsU0FBQyxtQkFBRCxHQUFBO0FBQzNELE1BQUEsbUJBQW1CLENBQUMsVUFBcEIsQ0FBZ0MsTUFBaEMsQ0FBQSxDQUFBO0FBQUEsTUFDQSxtQkFBbUIsQ0FBQyxvQkFBcEIsQ0FBeUM7QUFBQSxRQUFFLEVBQUEsRUFBSyxLQUFQO09BQXpDLENBREEsQ0FBQTthQUdBLG1CQUFtQixDQUFDLHNCQUFwQixDQUEyQyxTQUFDLElBQUQsRUFBTyxTQUFQLEVBQWtCLElBQWxCLEVBQXdCLEdBQXhCLEVBQTZCLFFBQTdCLEVBQXVDLFFBQXZDLEdBQUE7QUFDMUMsWUFBQSxhQUFBO0FBQUEsUUFBQSxhQUFBLEdBQWdCLE1BQWhCLENBQUE7QUFFQSxRQUFBLElBQUcsU0FBQSxLQUFjLFNBQWpCO0FBQ0MsVUFBQSxhQUFBLEdBQWdCLElBQUksQ0FBQyxPQUFyQixDQUREO1NBQUEsTUFBQTtBQUdDLFVBQUEsYUFBQSxHQUFnQixJQUFJLENBQUMsT0FBckIsQ0FIRDtTQUZBO2VBTUEsY0FQMEM7TUFBQSxDQUEzQyxFQUoyRDtJQUFBLENBQXhCO0dBQXBDLENBQUEsQ0FBQTs7QUFBQSxFQWNBLE9BQU8sQ0FBQyxNQUFSLENBQWdCLGlCQUFoQixDQUFpQyxDQUFDLE9BQWxDLENBQTJDLGFBQTNDLEVBQXlEO0lBQ3ZELFlBRHVELEVBRXZELE1BRnVELEVBR3ZELGFBSHVELEVBSXhELFNBQUMsVUFBRCxFQUFhLElBQWIsRUFBbUIsV0FBbkIsR0FBQTtBQUVDLFVBQUEsbUJBQUE7QUFBQSxNQUFBLGFBQUEsR0FBZ0IsV0FBVyxDQUFDLEdBQVosQ0FBaUIsVUFBakIsQ0FBaEIsQ0FBQTtBQUFBLE1BRUEsSUFBQSxHQUNDO0FBQUEsUUFBQSxTQUFBLEVBQVcsU0FBQSxHQUFBO2lCQUNWLGFBQWEsQ0FBQyxPQUFkLENBQUEsRUFEVTtRQUFBLENBQVg7QUFBQSxRQUdBLFlBQUEsRUFBYyxTQUFDLFFBQUQsR0FBQTtBQUNiLFVBQUEsUUFBUSxDQUFDLEdBQVQsQ0FBQSxDQUFBLENBQUE7aUJBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBYSxjQUFiLEVBRmE7UUFBQSxDQUhkO0FBQUEsUUFPQSxPQUFBLEVBQVMsU0FBQSxHQUFBLENBUFQ7T0FIRCxDQUFBO2FBYUEsS0FmRDtJQUFBLENBSndEO0dBQXpELENBZEEsQ0FBQTtBQUFBIiwiZmlsZSI6InNlcnZpY2VzL2RhdGEuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnbW9lZGl0LkFwcCcpLmNvbmZpZyBbJ1Jlc3Rhbmd1bGFyUHJvdmlkZXInLCAoUmVzdGFuZ3VsYXJQcm92aWRlcikgLT5cblx0UmVzdGFuZ3VsYXJQcm92aWRlci5zZXRCYXNlVXJsICcvYXBpJ1xuXHRSZXN0YW5ndWxhclByb3ZpZGVyLnNldFJlc3Rhbmd1bGFyRmllbGRzIHsgaWQ6IFwiX2lkXCJ9XG5cdCMgYWRkIGEgcmVzcG9uc2UgaW50ZXJlY2VwdG9yXG5cdFJlc3Rhbmd1bGFyUHJvdmlkZXIuYWRkUmVzcG9uc2VJbnRlcmNlcHRvciAoZGF0YSwgb3BlcmF0aW9uLCB3aGF0LCB1cmwsIHJlc3BvbnNlLCBkZWZlcnJlZCkgLT5cblx0XHRleHRyYWN0ZWREYXRhID0gdW5kZWZpbmVkXG5cdFx0IyAuLiB0byBsb29rIGZvciBnZXRMaXN0IG9wZXJhdGlvbnNcblx0XHRpZiBvcGVyYXRpb24gPT0gJ2dldExpc3QnXG5cdFx0XHRleHRyYWN0ZWREYXRhID0gZGF0YS5wYXlsb2FkXG5cdFx0ZWxzZVxuXHRcdFx0ZXh0cmFjdGVkRGF0YSA9IGRhdGEucGF5bG9hZFxuXHRcdGV4dHJhY3RlZERhdGFcbl1cblxuYW5ndWxhci5tb2R1bGUoJ21vZWRpdC5TZXJ2aWNlcycpLmZhY3RvcnkgJ21vZWRpdC5EYXRhJywgWyBcblx0JyRyb290U2NvcGUnXG5cdCckbG9nJ1xuXHQnUmVzdGFuZ3VsYXInXG5cdCgkcm9vdFNjb3BlLCAkbG9nLCBSZXN0YW5ndWxhcikgLT5cblxuXHRcdGJhc2VEb2N1bWVudHMgPSBSZXN0YW5ndWxhci5hbGwoJ2RvY3VtZW50JylcblxuXHRcdHNlbGYgPVxuXHRcdFx0ZG9jdW1lbnRzOiAtPlxuXHRcdFx0XHRiYXNlRG9jdW1lbnRzLmdldExpc3QoKVxuXHRcdFx0XHRcblx0XHRcdHNhdmVEb2N1bWVudDogKGRvY3VtZW50KSAtPlxuXHRcdFx0XHRkb2N1bWVudC5wdXQoKVxuXHRcdFx0XHRjb25zb2xlLmxvZyBcInB1dCBkb2N1bWVudFwiXG5cblx0XHRcdGF1dGhvcnM6IC0+XG5cblxuXHRcdHNlbGZcbl0iXX0=