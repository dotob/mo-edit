(function() {
  var controllers;

  controllers = angular.module('moedit.Controllers');

  controllers.controller('editController', [
    '$scope', '$log', '$q', '$state', 'moedit.Socket', 'moedit.SweetAlert', 'moedit.Focus', 'moedit.Data', function($scope, $log, $q, $state, Socket, SweetAlert, Focus, Data) {
      $scope.selectChapter = function(chapter) {
        var c, _i, _len, _ref;
        if ($scope.chapterWatch != null) {
          $scope.chapterWatch();
        }
        $log.info("select chapter " + chapter.title + ":" + chapter.selected);
        $log.debug(chapter.content);
        $scope.currentChapter = chapter;
        _ref = $scope.currentDocument.chapters;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          if (c._id === chapter._id) {
            c.selected = true;
          } else {
            c.selected = false;
          }
        }
        return $scope.chapterWatch = $scope.$watch('currentChapter.content', function(val) {
          return console.log('changed');
        });
      };
      $scope.newComment = function(chapter) {};
      $scope.newChapter = function(document) {};
      $scope.showPreview = function(document) {};
      $scope.downloadWord = function(document) {};
      return Data.documents().then(function(documents) {
        $scope.documents = documents;
        $scope.currentDocument = documents[0];
        return $scope.selectChapter($scope.currentDocument.chapters[0]);
      });
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJzL2VkaXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQSxXQUFBOztBQUFBLEVBQUEsV0FBQSxHQUFjLE9BQU8sQ0FBQyxNQUFSLENBQWdCLG9CQUFoQixDQUFkLENBQUE7O0FBQUEsRUFDQSxXQUFXLENBQUMsVUFBWixDQUF3QixnQkFBeEIsRUFBeUM7SUFDdkMsUUFEdUMsRUFFdkMsTUFGdUMsRUFHdkMsSUFIdUMsRUFJdkMsUUFKdUMsRUFLdkMsZUFMdUMsRUFNdkMsbUJBTnVDLEVBT3ZDLGNBUHVDLEVBUXZDLGFBUnVDLEVBU3hDLFNBQUMsTUFBRCxFQUFTLElBQVQsRUFBZSxFQUFmLEVBQW1CLE1BQW5CLEVBQTJCLE1BQTNCLEVBQW1DLFVBQW5DLEVBQStDLEtBQS9DLEVBQXNELElBQXRELEdBQUE7QUFFQyxNQUFBLE1BQU0sQ0FBQyxhQUFQLEdBQXVCLFNBQUMsT0FBRCxHQUFBO0FBQ3RCLFlBQUEsaUJBQUE7QUFBQSxRQUFBLElBQUcsMkJBQUg7QUFDQyxVQUFBLE1BQU0sQ0FBQyxZQUFQLENBQUEsQ0FBQSxDQUREO1NBQUE7QUFBQSxRQUVBLElBQUksQ0FBQyxJQUFMLENBQVcsaUJBQUEsR0FBaUIsT0FBTyxDQUFDLEtBQXpCLEdBQStCLEdBQS9CLEdBQWtDLE9BQU8sQ0FBQyxRQUFyRCxDQUZBLENBQUE7QUFBQSxRQUdBLElBQUksQ0FBQyxLQUFMLENBQVcsT0FBTyxDQUFDLE9BQW5CLENBSEEsQ0FBQTtBQUFBLFFBSUEsTUFBTSxDQUFDLGNBQVAsR0FBd0IsT0FKeEIsQ0FBQTtBQUtBO0FBQUEsYUFBQSwyQ0FBQTt1QkFBQTtBQUNDLFVBQUEsSUFBRyxDQUFDLENBQUMsR0FBRixLQUFTLE9BQU8sQ0FBQyxHQUFwQjtBQUNDLFlBQUEsQ0FBQyxDQUFDLFFBQUYsR0FBYSxJQUFiLENBREQ7V0FBQSxNQUFBO0FBR0MsWUFBQSxDQUFDLENBQUMsUUFBRixHQUFhLEtBQWIsQ0FIRDtXQUREO0FBQUEsU0FMQTtlQVVBLE1BQU0sQ0FBQyxZQUFQLEdBQXNCLE1BQU0sQ0FBQyxNQUFQLENBQWUsd0JBQWYsRUFBd0MsU0FBQyxHQUFELEdBQUE7aUJBQzdELE9BQU8sQ0FBQyxHQUFSLENBQWEsU0FBYixFQUQ2RDtRQUFBLENBQXhDLEVBWEE7TUFBQSxDQUF2QixDQUFBO0FBQUEsTUFjQSxNQUFNLENBQUMsVUFBUCxHQUFvQixTQUFDLE9BQUQsR0FBQSxDQWRwQixDQUFBO0FBQUEsTUFnQkEsTUFBTSxDQUFDLFVBQVAsR0FBb0IsU0FBQyxRQUFELEdBQUEsQ0FoQnBCLENBQUE7QUFBQSxNQWtCQSxNQUFNLENBQUMsV0FBUCxHQUFxQixTQUFDLFFBQUQsR0FBQSxDQWxCckIsQ0FBQTtBQUFBLE1Bb0JBLE1BQU0sQ0FBQyxZQUFQLEdBQXNCLFNBQUMsUUFBRCxHQUFBLENBcEJ0QixDQUFBO2FBdUJBLElBQUksQ0FBQyxTQUFMLENBQUEsQ0FBZ0IsQ0FBQyxJQUFqQixDQUFzQixTQUFDLFNBQUQsR0FBQTtBQUNyQixRQUFBLE1BQU0sQ0FBQyxTQUFQLEdBQW1CLFNBQW5CLENBQUE7QUFBQSxRQUNBLE1BQU0sQ0FBQyxlQUFQLEdBQXlCLFNBQVUsQ0FBQSxDQUFBLENBRG5DLENBQUE7ZUFFQSxNQUFNLENBQUMsYUFBUCxDQUFxQixNQUFNLENBQUMsZUFBZSxDQUFDLFFBQVMsQ0FBQSxDQUFBLENBQXJELEVBSHFCO01BQUEsQ0FBdEIsRUF6QkQ7SUFBQSxDQVR3QztHQUF6QyxDQURBLENBQUE7QUFBQSIsImZpbGUiOiJjb250cm9sbGVycy9lZGl0LmpzIiwic291cmNlUm9vdCI6Ii9zb3VyY2UvIiwic291cmNlc0NvbnRlbnQiOlsiY29udHJvbGxlcnMgPSBhbmd1bGFyLm1vZHVsZSgnbW9lZGl0LkNvbnRyb2xsZXJzJylcbmNvbnRyb2xsZXJzLmNvbnRyb2xsZXIgJ2VkaXRDb250cm9sbGVyJywgW1xuXHQnJHNjb3BlJ1xuXHQnJGxvZydcblx0JyRxJ1xuXHQnJHN0YXRlJ1xuXHQnbW9lZGl0LlNvY2tldCdcblx0J21vZWRpdC5Td2VldEFsZXJ0J1xuXHQnbW9lZGl0LkZvY3VzJ1xuXHQnbW9lZGl0LkRhdGEnXG5cdCgkc2NvcGUsICRsb2csICRxLCAkc3RhdGUsIFNvY2tldCwgU3dlZXRBbGVydCwgRm9jdXMsIERhdGEpIC0+XG5cblx0XHQkc2NvcGUuc2VsZWN0Q2hhcHRlciA9IChjaGFwdGVyKSAtPlxuXHRcdFx0aWYgJHNjb3BlLmNoYXB0ZXJXYXRjaD9cblx0XHRcdFx0JHNjb3BlLmNoYXB0ZXJXYXRjaCgpICMgcmVtb3ZlIHdhdGNoXG5cdFx0XHQkbG9nLmluZm8gXCJzZWxlY3QgY2hhcHRlciAje2NoYXB0ZXIudGl0bGV9OiN7Y2hhcHRlci5zZWxlY3RlZH1cIlxuXHRcdFx0JGxvZy5kZWJ1ZyBjaGFwdGVyLmNvbnRlbnRcblx0XHRcdCRzY29wZS5jdXJyZW50Q2hhcHRlciA9IGNoYXB0ZXJcblx0XHRcdGZvciBjIGluICRzY29wZS5jdXJyZW50RG9jdW1lbnQuY2hhcHRlcnNcblx0XHRcdFx0aWYgYy5faWQgPT0gY2hhcHRlci5faWRcblx0XHRcdFx0XHRjLnNlbGVjdGVkID0gdHJ1ZVxuXHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0Yy5zZWxlY3RlZCA9IGZhbHNlXG5cdFx0XHQkc2NvcGUuY2hhcHRlcldhdGNoID0gJHNjb3BlLiR3YXRjaCAnY3VycmVudENoYXB0ZXIuY29udGVudCcsICh2YWwpIC0+XG5cdFx0XHRcdGNvbnNvbGUubG9nICdjaGFuZ2VkJ1xuXG5cdFx0JHNjb3BlLm5ld0NvbW1lbnQgPSAoY2hhcHRlcikgLT5cblx0XHRcdCMgVE9ET1xuXHRcdCRzY29wZS5uZXdDaGFwdGVyID0gKGRvY3VtZW50KSAtPlxuXHRcdFx0IyBUT0RPXG5cdFx0JHNjb3BlLnNob3dQcmV2aWV3ID0gKGRvY3VtZW50KSAtPlxuXHRcdFx0IyBUT0RPOiBnb3RvIC9wcmV2aWV3Lzpkb2NpZFxuXHRcdCRzY29wZS5kb3dubG9hZFdvcmQgPSAoZG9jdW1lbnQpIC0+XG5cdFx0XHQjIFRPRE86IGdvdG8gL2Rvd25sb2FkLzpkb2NpZFxuXG5cdFx0RGF0YS5kb2N1bWVudHMoKS50aGVuIChkb2N1bWVudHMpIC0+XG5cdFx0XHQkc2NvcGUuZG9jdW1lbnRzID0gZG9jdW1lbnRzXG5cdFx0XHQkc2NvcGUuY3VycmVudERvY3VtZW50ID0gZG9jdW1lbnRzWzBdXG5cdFx0XHQkc2NvcGUuc2VsZWN0Q2hhcHRlcigkc2NvcGUuY3VycmVudERvY3VtZW50LmNoYXB0ZXJzWzBdKVxuXHRcdFx0XG5cbl1cbiJdfQ==