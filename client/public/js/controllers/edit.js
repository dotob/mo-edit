(function() {
  var controllers;

  controllers = angular.module('moedit.Controllers');

  controllers.controller('editController', [
    '$scope', '$log', '$q', '$state', '$stateParams', '$window', 'moedit.Socket', 'moedit.SweetAlert', 'moedit.Focus', 'moedit.Data', 'messageCenterService', function($scope, $log, $q, $state, $stateParams, $window, Socket, SweetAlert, Focus, Data, messageCenterService) {
      var autoSave, autoSaveCurrentDocument, chapterchange;
      autoSaveCurrentDocument = function() {
        $log.debug("autosave");
        return $scope.saveDocument($scope.currentDocument, "Automatisch gespeichert");
      };
      autoSave = _.debounce(autoSaveCurrentDocument, 5000);
      $scope.selectChapter = function(chapter) {
        var c, _i, _len, _ref;
        if ($scope.chapterWatch != null) {
          $scope.chapterWatch();
        }
        $log.info("select chapter " + chapter.title + ":" + chapter.selected);
        $scope.currentChapter = chapter;
        _ref = $scope.currentDocument.chapters;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          if (c._id === chapter._id) {
            c.selected = true;
          } else {
            c.selected = false;
          }
        }
        return $scope.chapterWatch = $scope.$watch('currentChapter', chapterchange, true);
      };
      chapterchange = function(newValue, oldValue) {
        $log.debug("changed");
        if (newValue !== oldValue) {
          $scope.currentChapter.lastChanged = new Date();
          return autoSave();
        }
      };
      $scope.newComment = function(chapter) {
        return SweetAlert.info('kommt noch');
      };
      $scope.newChapter = function(document) {
        return SweetAlert.info('kommt noch');
      };
      $scope.showPreview = function(document) {
        return $window.open("/preview/" + document._id);
      };
      $scope.downloadWord = function(document) {
        return $window.open("/download/word/" + document._id);
      };
      $scope.saveDocument = function(document, msg) {
        if (msg == null) {
          msg = "Gutachten erfolgreich gespeichert";
        }
        return Data.saveDocument(document).then(function(response) {
          if (response.status !== 200) {
            return messageCenterService.add('danger', msg, {
              html: true
            });
          } else {
            return messageCenterService.add('success', msg, {
              timeout: 2000,
              html: true
            });
          }
        });
      };
      $scope.docStateChanged = function(val) {
        return console.log($scope.currentDocument.state);
      };
      return Data.document($stateParams.docid).then(function(document) {
        console.dir(document);
        $scope.currentDocument = document;
        return $scope.selectChapter($scope.currentDocument.chapters[0]);
      });
    }
  ]);

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJzL2VkaXQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQSxXQUFBOztBQUFBLEVBQUEsV0FBQSxHQUFjLE9BQU8sQ0FBQyxNQUFSLENBQWdCLG9CQUFoQixDQUFkLENBQUE7O0FBQUEsRUFDQSxXQUFXLENBQUMsVUFBWixDQUF3QixnQkFBeEIsRUFBeUM7SUFDdkMsUUFEdUMsRUFFdkMsTUFGdUMsRUFHdkMsSUFIdUMsRUFJdkMsUUFKdUMsRUFLdkMsY0FMdUMsRUFNdkMsU0FOdUMsRUFPdkMsZUFQdUMsRUFRdkMsbUJBUnVDLEVBU3ZDLGNBVHVDLEVBVXZDLGFBVnVDLEVBV3ZDLHNCQVh1QyxFQVl4QyxTQUFDLE1BQUQsRUFBUyxJQUFULEVBQWUsRUFBZixFQUFtQixNQUFuQixFQUEyQixZQUEzQixFQUF5QyxPQUF6QyxFQUFrRCxNQUFsRCxFQUEwRCxVQUExRCxFQUFzRSxLQUF0RSxFQUE2RSxJQUE3RSxFQUFtRixvQkFBbkYsR0FBQTtBQUdDLFVBQUEsZ0RBQUE7QUFBQSxNQUFBLHVCQUFBLEdBQTBCLFNBQUEsR0FBQTtBQUN6QixRQUFBLElBQUksQ0FBQyxLQUFMLENBQVksVUFBWixDQUFBLENBQUE7ZUFDQSxNQUFNLENBQUMsWUFBUCxDQUFvQixNQUFNLENBQUMsZUFBM0IsRUFBNkMseUJBQTdDLEVBRnlCO01BQUEsQ0FBMUIsQ0FBQTtBQUFBLE1BSUEsUUFBQSxHQUFXLENBQUMsQ0FBQyxRQUFGLENBQVcsdUJBQVgsRUFBb0MsSUFBcEMsQ0FKWCxDQUFBO0FBQUEsTUFNQSxNQUFNLENBQUMsYUFBUCxHQUF1QixTQUFDLE9BQUQsR0FBQTtBQUN0QixZQUFBLGlCQUFBO0FBQUEsUUFBQSxJQUFHLDJCQUFIO0FBQ0MsVUFBQSxNQUFNLENBQUMsWUFBUCxDQUFBLENBQUEsQ0FERDtTQUFBO0FBQUEsUUFFQSxJQUFJLENBQUMsSUFBTCxDQUFXLGlCQUFBLEdBQWlCLE9BQU8sQ0FBQyxLQUF6QixHQUEr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LENBQXFCLE1BQU0sQ0FBQyxlQUFlLENBQUMsUUFBUyxDQUFBLENBQUEsQ0FBckQsRUFIc0M7TUFBQSxDQUF2QyxFQWpERDtJQUFBLENBWndDO0dBQXpDLENBREEsQ0FBQTtBQUFBIiwiZmlsZSI6ImNvbnRyb2xsZXJzL2VkaXQuanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJjb250cm9sbGVycyA9IGFuZ3VsYXIubW9kdWxlKCdtb2VkaXQuQ29udHJvbGxlcnMnKVxuY29udHJvbGxlcnMuY29udHJvbGxlciAnZWRpdENvbnRyb2xsZXInLCBbXG5cdCckc2NvcGUnXG5cdCckbG9nJ1xuXHQnJHEnXG5cdCckc3RhdGUnXG5cdCckc3RhdGVQYXJhbXMnXG5cdCckd2luZG93J1xuXHQnbW9lZGl0LlNvY2tldCdcblx0J21vZWRpdC5Td2VldEFsZXJ0J1xuXHQnbW9lZGl0LkZvY3VzJ1xuXHQnbW9lZGl0LkRhdGEnXG5cdCdtZXNzYWdlQ2VudGVyU2VydmljZSdcblx0KCRzY29wZSwgJGxvZywgJHEsICRzdGF0ZSwgJHN0YXRlUGFyYW1zLCAkd2luZG93LCBTb2NrZXQsIFN3ZWV0QWxlcnQsIEZvY3VzLCBEYXRhLCBtZXNzYWdlQ2VudGVyU2VydmljZSkgLT5cblxuXHRcdCMgYXV0b3NhdmVcblx0XHRhdXRvU2F2ZUN1cnJlbnREb2N1bWVudCA9ICgpIC0+XG5cdFx0XHQkbG9nLmRlYnVnIFwiYXV0b3NhdmVcIlxuXHRcdFx0JHNjb3BlLnNhdmVEb2N1bWVudCgkc2NvcGUuY3VycmVudERvY3VtZW50LCBcIkF1dG9tYXRpc2NoIGdlc3BlaWNoZXJ0XCIpXG5cdFx0XG5cdFx0YXV0b1NhdmUgPSBfLmRlYm91bmNlIGF1dG9TYXZlQ3VycmVudERvY3VtZW50LCA1MDAwXG5cblx0XHQkc2NvcGUuc2VsZWN0Q2hhcHRlciA9IChjaGFwdGVyKSAtPlxuXHRcdFx0aWYgJHNjb3BlLmNoYXB0ZXJXYXRjaD9cblx0XHRcdFx0JHNjb3BlLmNoYXB0ZXJXYXRjaCgpICMgcmVtb3ZlIHdhdGNoXG5cdFx0XHQkbG9nLmluZm8gXCJzZWxlY3QgY2hhcHRlciAje2NoYXB0ZXIudGl0bGV9OiN7Y2hhcHRlci5zZWxlY3RlZH1cIlxuXHRcdFx0JHNjb3BlLmN1cnJlbnRDaGFwdGVyID0gY2hhcHRlclxuXHRcdFx0Zm9yIGMgaW4gJHNjb3BlLmN1cnJlbnREb2N1bWVudC5jaGFwdGVyc1xuXHRcdFx0XHRpZiBjLl9pZCA9PSBjaGFwdGVyLl9pZFxuXHRcdFx0XHRcdGMuc2VsZWN0ZWQgPSB0cnVlXG5cdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRjLnNlbGVjdGVkID0gZmFsc2Vcblx0XHRcdCRzY29wZS5jaGFwdGVyV2F0Y2ggPSAkc2NvcGUuJHdhdGNoICdjdXJyZW50Q2hhcHRlcicsIGNoYXB0ZXJjaGFuZ2UsIHRydWVcblxuXHRcdGNoYXB0ZXJjaGFuZ2UgPSAobmV3VmFsdWUsIG9sZFZhbHVlKSAtPlxuXHRcdFx0XHQkbG9nLmRlYnVnIFwiY2hhbmdlZFwiXG5cdFx0XHRcdGlmIG5ld1ZhbHVlICE9IG9sZFZhbHVlXG5cdFx0XHRcdFx0JHNjb3BlLmN1cnJlbnRDaGFwdGVyLmxhc3RDaGFuZ2VkID0gbmV3IERhdGUoKVxuXHRcdFx0XHRcdGF1dG9TYXZlKClcblxuXHRcdCRzY29wZS5uZXdDb21tZW50ID0gKGNoYXB0ZXIpIC0+XG5cdFx0XHRTd2VldEFsZXJ0LmluZm8gJ2tvbW10IG5vY2gnXG5cblx0XHQkc2NvcGUubmV3Q2hhcHRlciA9IChkb2N1bWVudCkgLT5cblx0XHRcdFN3ZWV0QWxlcnQuaW5mbyAna29tbXQgbm9jaCdcblxuXHRcdCRzY29wZS5zaG93UHJldmlldyA9IChkb2N1bWVudCkgLT5cblx0XHRcdCR3aW5kb3cub3BlbiBcIi9wcmV2aWV3LyN7ZG9jdW1lbnQuX2lkfVwiXG5cblx0XHQkc2NvcGUuZG93bmxvYWRXb3JkID0gKGRvY3VtZW50KSAtPlxuXHRcdFx0JHdpbmRvdy5vcGVuIFwiL2Rvd25sb2FkL3dvcmQvI3tkb2N1bWVudC5faWR9XCJcblxuXHRcdCRzY29wZS5zYXZlRG9jdW1lbnQgPSAoZG9jdW1lbnQsIG1zZyA9IFwiR3V0YWNodGVuIGVyZm9sZ3JlaWNoIGdlc3BlaWNoZXJ0XCIpIC0+XG5cdFx0XHREYXRhLnNhdmVEb2N1bWVudChkb2N1bWVudCkudGhlbiAocmVzcG9uc2UpIC0+XG5cdFx0XHRcdGlmIHJlc3BvbnNlLnN0YXR1cyAhPSAyMDBcblx0XHRcdFx0XHRtZXNzYWdlQ2VudGVyU2VydmljZS5hZGQoJ2RhbmdlcicsIG1zZywge2h0bWw6IHRydWV9KTtcblx0XHRcdFx0ZWxzZVxuXHRcdFx0XHRcdG1lc3NhZ2VDZW50ZXJTZXJ2aWNlLmFkZCgnc3VjY2VzcycsIG1zZywge3RpbWVvdXQ6IDIwMDAsIGh0bWw6IHRydWV9KTtcblxuXHRcdCRzY29wZS5kb2NTdGF0ZUNoYW5nZWQgPSAodmFsKSAtPlxuXHRcdFx0Y29uc29sZS5sb2cgJHNjb3BlLmN1cnJlbnREb2N1bWVudC5zdGF0ZVxuXG5cdFx0RGF0YS5kb2N1bWVudCgkc3RhdGVQYXJhbXMuZG9jaWQpLnRoZW4gKGRvY3VtZW50KSAtPlxuXHRcdFx0Y29uc29sZS5kaXIgZG9jdW1lbnRcblx0XHRcdCRzY29wZS5jdXJyZW50RG9jdW1lbnQgPSBkb2N1bWVudFxuXHRcdFx0JHNjb3BlLnNlbGVjdENoYXB0ZXIoJHNjb3BlLmN1cnJlbnREb2N1bWVudC5jaGFwdGVyc1swXSlcbl1cbiJdfQ==